---
# tasks file for workstation

- name: include vars file
  include_vars:
    file: "{{ workstation_fella }}.yml"

- name: interact with API
  uri:
    url: "{{ item.url }}"
    method: "{{ item.method }}"
    body: "{{ item.body | default(omit) }}"
    body_format: "{{ item.body_format | default(omit) }}"
    return_content: "{{ item.return_content }}"
  register: "{{ item.register | default(omit) }}"
  with_items:
    - "{{ workstation_api_interaction }}"
    - "{{ workstation_default_api_interaction }}"


- name: set hostname
  hostname:
    name: "{{ workstation_hostname }}"

- name: remove defined RPM packages
  dnf:
    name: "{{ item }}"
    state: absent
  with_items:
    - "{{ workstation_rpm_packages_remove }}"
    - "{{ workstation_default_rpm_packages_remove }}"

- name: create required directory structures
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - "{{ workstation_required_dirs }}"
    - "{{ workstation_default_required_dirs }}"

- name: download required files
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - "{{ workstation_download_files }}"
    - "{{ workstation_default_download_files }}"

- name: deploy required files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ workstation_required_files }}"
    - "{{ workstation_default_required_files }}"

- name: add required RPM repositories
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.baseurl | default(omit) }}"
    mirrorlist: "{{ item.mirrorlist | default(omit) }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey | default(omit) }}"
    enabled: "{{ item.enabled }}"
    state: present
  with_items:
    - "{{ workstation_rpm_repos }}"
    - "{{ workstation_default_rpm_repos }}"

- name: add RPM repositories from RPM package
  dnf:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ workstation_rpm_repo_packages }}"
    - "{{ workstation_default_rpm_repo_packages }}"

- name: add RPM gpg keys
  rpm_key:
    key: "{{ item.gpgkey|regex_replace('file://', '') }}"
    state: present
  when: item.gpgkey is defined
  with_items:
    - "{{ workstation_rpm_repos }}"
    - "{{ workstation_default_rpm_repos }}"

- name: install required RPM packages
  dnf:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ workstation_rpm_packages }}"
    - "{{ workstation_default_rpm_packages }}"

- name: run commands
  command: "{{ item }}"
  with_items:
    - "{{ workstation_run_command }}"
    - "{{ workstation_default_run_command }}"
  become_user: "{{ workstation_username }}"

- name: clone repositories
  git:
    repo: "{{ item.value.repo }}"
    dest: "{{ item.value.dest }}"
    clone: yes
  with_dict:
    - "{{ workstation_git_repositories }}"
    - "{{ workstation_default_git_repositories }}"
  become_user: "{{ workstation_username }}"

- name: deploy defined templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: "{{ item.backup }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - "{{ workstation_required_templates }}"
    - "{{ workstation_default_required_templates }}"

- name: create additional groups
  user:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ workstation_default_groups_additional_create }}"
    - "{{ workstation_groups_additional_create }}"

- name: append user to additional groups
  user:
    name: "{{ workstation_username }}"
    groups: "{{ item }}"
    append: yes
  with_items:
    - "{{ workstation_default_groups_additional }}"
    - "{{ workstation_groups_additional }}"

- name: adjust user's shell
  user:
    name: "{{ workstation_username }}"
    shell: "{{ workstation_user_shell | default(workstation_default_user_shell) }}"

- name: enable required systemd units
  systemd:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - "{{ workstation_enabled_systemd_units }}"
    - "{{ workstation_default_enabled_systemd_units }}"

- name: configure kernel parameters using sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - "{{ workstation_sysctl_parameters }}"

- name: configure dconf settings
  dconf:
    key: "{{ item.key }}"
    state: "{{ item.state }}"
    value: "{{ item.value }}"
  with_items:
    - "{{ workstation_dconf }}"
    - "{{ workstation_default_dconf }}"
  become_user: "{{ workstation_username }}"

- name: include task files
  include_tasks: "{{ item }}"
  with_items: "{{ workstation_include_tasks }}"

- name: cleanup obsolete files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ workstation_cleanup_files }}"
    - "{{ workstation_default_cleanup_files }}"
